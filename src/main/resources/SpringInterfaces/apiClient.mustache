package {{package}};

{{#imports}}
import {{import}};
{{/imports}}
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
{{#operations}}
import org.springframework.web.bind.annotation.RequestMapping;
{{/operations}}
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import com.querydsl.core.types.Predicate;
import org.springframework.validation.annotation.Validated;
import java.util.*;
{{#async}}
import java.util.concurrent.Callable;
{{/async}}
{{#useBeanValidation}}
import javax.validation.constraints.*;
import javax.validation.Valid;
{{/useBeanValidation}}
import org.springframework.beans.factory.annotation.Autowired;

{{#operations}}
@FeignClient(name = "{{feignName}}", url = "{{feignUrl}}"{{#isClientConfigRequired}}, configuration = {{clientConfigClass}}{{/isClientConfigRequired}})
public interface {{classname}}Client {

{{#operation}}
    @RequestMapping(value = "{{{path}}}", method = RequestMethod.{{httpMethod}})
    public {{>returnTypesClient}} {{operationId}}({{#allParams}}{{>queryParams}}{{>pathParamsClient}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}}, {{/hasMore}}{{/allParams}}{{#vendorExtensions.usePageable}},Pageable pageable, Sort sortable{{/vendorExtensions.usePageable}});

{{/operation}}
}
{{/operations}}
