package {{package}};

{{#imports}}import {{import}};
{{/imports}}

{{#jdk8}}
import org.springframework.http.HttpStatus;{{/jdk8}}
import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;
import static io.github.benas.randombeans.api.EnhancedRandom.*;
import java.net.URI;
{{#vendorExtensions.usePageable}}
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
{{/vendorExtensions.usePageable}}

import java.util.*;
{{#async}}
import java.util.concurrent.{{^jdk8}}Callable{{/jdk8}}{{#jdk8}}CompletableFuture{{/jdk8}};
{{/async}}

{{#operations}}
/**
 * A delegate to be called by the {@link {{classname}}Controller}}.
 * Should be implemented as a controller but without the {@link org.springframework.stereotype.Controller} annotation.
 * Instead, use spring to autowire this class into the {@link {{classname}}Controller}.
 */
{{>generatedAnnotation}}
public interface {{classname}}Delegate {

{{#operation}}
    /**
     */
    {{#jdk8}}default {{/jdk8}}{{#responseWrapper}}{{.}}<{{/responseWrapper}}{{>returnTypes}}{{#responseWrapper}}>{{/responseWrapper}} {{operationId}}({{#allParams}}{{^isFile}}{{{dataType}}}{{/isFile}}{{#isFile}}MultipartFile{{/isFile}} {{paramName}}{{#hasMore}},{{/hasMore}}{{/allParams}}{{#isListContainer}}{{#vendorExtensions.usePageable}}{{#hasParams}}, {{/hasParams}}Pageable pageable, Sort sortable{{/vendorExtensions.usePageable}}{{/isListContainer}}){{#jdk8}} {
        {{#vendorExtensions.isReturnRequired}}return {{/vendorExtensions.isReturnRequired}}{{#vendorExtensions.isReturnRequired}}{{>randomReturnTypes}};{{/vendorExtensions.isReturnRequired}}
    }{{/jdk8}}

{{/operation}}
}
{{/operations}}
