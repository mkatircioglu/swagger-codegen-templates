package {{package}};

{{#imports}}
import {{import}};
{{/imports}}
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.*;
{{#vendorExtensions.usePageable}}
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
{{/vendorExtensions.usePageable}}
import java.util.*;
{{#async}}
import java.util.concurrent.Callable;
{{/async}}
{{#useBeanValidation}}
import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;
{{/useBeanValidation}}
import org.springframework.beans.factory.annotation.Autowired;
{{^useDelegatePattern}}
import java.net.URI;
{{/useDelegatePattern}}


@Validated
@RestController
{{#operations}}
public class {{classname}}Controller {
{{#useDelegatePattern}}

    private final {{classname}}Delegate delegate;

    @Autowired
    public {{classname}}Controller({{classname}}Delegate delegate) {
        this.delegate = delegate;
    }
{{/useDelegatePattern}}

    {{#operation}}
    {{>methodSecurity}}
    @RequestMapping(value = "{{{path}}}", method = RequestMethod.{{httpMethod}})
    public {{>returnTypes}} {{operationId}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}}, {{/hasMore}}{{/allParams}}{{#isListContainer}}{{#vendorExtensions.usePageable}}{{#hasParams}}, {{/hasParams}}Pageable pageable, Sort sortable{{/vendorExtensions.usePageable}}{{/isListContainer}}) {
        {{^useDelegatePattern}}
        return {{#isRestfulCreate}}ResponseEntity.created(URI.create("{{{vendorExtensions.pathForDelegate}}}")).build{{/isRestfulCreate}}{{^isRestfulCreate}}new {{>returnTypes}}{{/isRestfulCreate}}();
        {{/useDelegatePattern}}
        {{#useDelegatePattern}}
        {{#vendorExtensions.isReturnRequired}}return {{/vendorExtensions.isReturnRequired}}delegate.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}{{#isListContainer}}{{#vendorExtensions.usePageable}}{{#hasParams}}, {{/hasParams}} pageable, sortable{{/vendorExtensions.usePageable}}{{/isListContainer}});
        {{/useDelegatePattern}}
    }

    {{/operation}}
}
{{/operations}}
